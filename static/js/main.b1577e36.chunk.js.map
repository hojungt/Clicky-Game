{"version":3,"sources":["images sync /^/.//.*$","images/beth.png","images/birdperson.png","images/evilmorty.png","images/giantrick.png","images/goldenford.png","images/jerry.png","images/jessica.png","images/meeseek.png","images/morty.png","images/rick.png","images/summer.png","images/what.png","components/Navbar.js","components/Jumbotron.js","components/Card.js","components/Footer.js","components/Container.js","components/Row.js","pages/Game.js","App.js","index.js"],"names":["map","./beth.png","./birdperson.png","./evilmorty.png","./giantrick.png","./goldenford.png","./images","./images.json","./jerry.png","./jessica.png","./meeseek.png","./morty.png","./rick.png","./summer.png","./what.png","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","p","Navbar","props","react_default","a","createElement","className","href","message","winScore","topScore","Jumbotron","style","maxHeight","maxWidth","Card","alt","name","src","require","image","onClick","checkGuess","Footer","Container","concat","fluid","children","Row","Game","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","state","images","imagesUnguessed","shuffleArray","array","sort","Math","random","setStateGuessRight","imagesNew","setState","score","setStateGuessWrong","inherits","createClass","key","value","components_Navbar","components_Jumbotron","components_Container","components_Row","components_Card","components_Footer","Component","App","pages_Game","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.b1577e36.chunk.js","sourcesContent":["var map = {\n\t\"./beth.png\": 16,\n\t\"./birdperson.png\": 17,\n\t\"./evilmorty.png\": 18,\n\t\"./giantrick.png\": 19,\n\t\"./goldenford.png\": 20,\n\t\"./images\": 1,\n\t\"./images.json\": 1,\n\t\"./jerry.png\": 21,\n\t\"./jessica.png\": 22,\n\t\"./meeseek.png\": 23,\n\t\"./morty.png\": 24,\n\t\"./rick.png\": 25,\n\t\"./summer.png\": 26,\n\t\"./what.png\": 27\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 15;","module.exports = __webpack_public_path__ + \"static/media/beth.4d5e65a0.png\";","module.exports = __webpack_public_path__ + \"static/media/birdperson.612ba8d4.png\";","module.exports = __webpack_public_path__ + \"static/media/evilmorty.0657e1f4.png\";","module.exports = __webpack_public_path__ + \"static/media/giantrick.978b3847.png\";","module.exports = __webpack_public_path__ + \"static/media/goldenford.3774b39d.png\";","module.exports = __webpack_public_path__ + \"static/media/jerry.af8e8a84.png\";","module.exports = __webpack_public_path__ + \"static/media/jessica.a9644830.png\";","module.exports = __webpack_public_path__ + \"static/media/meeseek.9667b7ee.png\";","module.exports = __webpack_public_path__ + \"static/media/morty.7e673385.png\";","module.exports = __webpack_public_path__ + \"static/media/rick.06b65841.png\";","module.exports = __webpack_public_path__ + \"static/media/summer.afdbb7bf.png\";","module.exports = __webpack_public_path__ + \"static/media/what.d61b2d5b.png\";","import React from \"react\";\n\nfunction Navbar(props) {\n    return (\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n            <ul className=\"nav\">\n                <li className=\"nav-item\">\n                    <a className=\"navbar-brand\" href=\"#\">\n                        Clicky Game\n                    </a>\n                </li>\n                <li className=\"nav-item\">\n                    Message: {props.message}\n                </li>\n                <li className=\"nav-item\">\n                    Score: {props.winScore} | Top Score: {props.topScore}\n                </li>\n            </ul>\n        </nav>\n    );\n}\n\nexport default Navbar;\n","import React from \"react\";\n\nfunction Jumbotron() {\n  return (\n    <div className=\"jumbotron\">\n      <h1>Clicky Game</h1>\n      <p>\n        Click on an image to earn points, but don't click on any more than once!\n      </p>\n    </div>\n  );\n}\n\nexport default Jumbotron;","import React from \"react\";\n\nfunction Card(props) {\n    return (\n        <img \n            className=\"img-fluid img-thumbnail\"\n            alt={props.name}\n            // to find images locally, must write path and `require` in `{}`\n            src={require(\"../images/\" + props.image)}\n            style={style}\n            onClick={() => props.checkGuess(props.id)}\n        />\n    );\n};\n\nconst style = {\n    maxHeight: \"200px\",\n    maxWidth: \"200px\"\n};\n\nexport default Card;","import React from \"react\";\n\nfunction Footer() {\n    return (\n        <footer className=\"footer\">\n            <div className=\"bottom\">\n                Clicky Game\n            </div>\n        </footer>\n    );\n}\n\nexport default Footer;","import React from \"react\";\n\nfunction Container(props) {\n    return <div className={`container${props.fluid ? \"-fluid\" : \"\"}`}>{props.children}</div>;\n}\n\nexport default Container;","import React from \"react\";\n\nfunction Row(props) {\n    return <div className={`row${props.fluid ? \"-fluid\" : \"\"}`}>{props.children}</div>;\n}\n\nexport default Row;\n","import React, { Component } from \"react\";\nimport Navbar from \"../components/Navbar\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport Card from \"../components/Card\";\nimport Footer from \"../components/Footer\";\nimport Container from \"../components/Container\";\nimport Row from \"../components/Row\";\n\nimport images from \"../images/images.json\"\n\nexport class Game extends Component {\n    // define state\n    state = {\n        images: images,\n        imagesUnguessed: images,\n        winScore: 0,\n        topScore: 0,\n        message: \"Click an image to begin\",\n    };  \n\n    // shuffle by array.sort\n    shuffleArray = (array) => {\n        array.sort(() => Math.random - 0.5);\n    };\n    // `sort()` sorts the elements of an array in place and returns the sorted array\n    // The default sort order is built upon converting the elements into strings, \n    // then comparing their sequences of UTF-16 code units values.\n\n\n    // change to this state if the image hasn't been guessed\n    setStateGuessRight = (imagesNew) => {\n        this.setState({\n            images: images,\n            imagesUnguessed: imagesNew,    \n            winScore: this.state.score +1,\n            message: \"Your guess is right!\"\n        })\n    };\n\n    // change to this state if the image has already been guessed\n    setStateGuessWrong = () => {\n        this.setState({\n            images: images,\n            imagesUnguessed: images,    \n            topScore: this.state.winScore > this.state.topScore ? this.state.winScore : this.state.topScore,\n            winScore: 0,\n            message: \"Game over! Your guess is wrong.\"\n        })\n    };\n\n    // check if the image has been guessed, compared to original images.json\n    checkGuess = (id) => {\n        \n    };\n\n    render() {\n        return (\n            <div>\n                <Navbar \n                    winScore={this.state.winScore} \n                    topScore={this.state.topScore}\n                    message={this.state.message}\n                />\n                <Jumbotron />\n\n                <Container>\n                    <Row>\n                        {this.state.images.map(image => \n                            (<Card \n                                id={image.id}\n                                name={image.name}\n                                image={image.image}\n                            />\n                        ))}\n                    </Row>\n                </Container>\n\n                <Footer />\n            </div>\n        );\n    }\n}\n\nexport default Game;","import React from \"react\";\nimport Game from \"./pages/Game\";\n\nfunction App() {\n    return (\n        <Game />\n    );\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}